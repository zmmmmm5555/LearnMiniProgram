<!--pages/wxml/wxml.wxml-->
<text>pages/wxml/wxml.wxml</text>
<view>{{nowTime}}</view>
<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class="box {{isActive ? 'active':''}}">哈蛤</view>

<map class="map" longitude="116.11" latitude="39.6"></map>


<view>------------条件判断------------</view>
<!--wx:if的使用-->
<button size="mini" bindtap="hanleSwitchShow">切换显示</button>
<view wx:if="{{isShow}}">哈哈</view>


<!--wx:elif/wx:else-->
<button size="mini" bindtap="handleIncrement">分数递增6</button>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>

<!--hidden属性-->
<view wx:if="{{false}}">我是hidden属性控制的内容</view>
<view hidden="{{true}}">我是hidden属性控制的内容</view>

<!--wx:if和hidden在隐藏组件时有什么区别-->
<!--
  区别：
  hidden:将一个组件隐藏起来时，该组件依然存在（display:none）
  wx:if:将一个组件隐藏起来时，该组件根本不存在(压根没有创建)
  选择：
  如果显示和隐藏切换的频率非常高，选择使用hidden
  如果显示和隐藏切换的频率非常低，那么选择wx:if
-->
<view>-------------</view>
<view hidden="{{true}}">我是通过hidden控制的内容</view>
<view wx:if="{{false}}">我是通过wx:if控制的内容</view>

<view>-----列表渲染------</view>
<!--1.wx:for的回顾-->
<!--1.1遍历数组/字符串/数字-->
<!-- <view wx:for="{{['abc','cba','nba']}}">{{item}}</view>
<view wx:for="codehad">{{item}}{{index}}</view>
<view wx:for="{{5}}">{{item}}</view> -->
<!-- 
<block wx:for="{{3}}">
  <h2>哈哈哈哈</h2>
  <button>111</button>
</block> -->

<!--3.item、index起名字-->
<view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}} {{i}}</view>

<!-- <block wx:for="{{nums}}" wx:for-item="inner_nums">
  <block wx:for="{{inner_nums}}">
    <view>{{item}}</view>
  </block>
</block> -->

<!--4.key的作用-->
<!-- <view wx:for="{{letters}}" wx:for="{{item}}">{{item}}</view> -->

<view>-----template-------</view>

<!--
  之前小程序不支持自定义组件，为了进行代码的复用：template
-->
<!--模板中包裹的内容，在没有被使用前，是不会进行任何的渲染的-->

<!-- <template name="contentItem">
  <button size="mini">{{btnText}}</button>
    <view>{{content}}</view>
</template> -->

<import src="模板文件的路径"/>
<!--结论：include是不能导入模板-->

<!--
  关于wxml的导入有两种方式：
  import导入：
     1.主要是导入template
     2.特点：不能进行递归导入
  include引入：
     1.将公共的wxml中的组件抽取到一个文件中
     2.特点：不能导入template/wxs,可以进行递归导入
-->

<!-- <include src="/wxml/template.wxml"/> -->
<!--绝对路径-->
<!-- <import src="/wxml/template.wxml"/> -->
<!--相对路径-->
<import src="../../wxml/template.wxml"/>

<template is="contentItem" data="{{btnText:'按钮',content:'哈哈哈'}}"/>
<template is="contentItem" data="{{btnText:'警告',content:'哈嘻嘻哈'}}"/>
<template is="contentItem" data="{{btnText:'点击',content:'喝喝喝'}}"/>



